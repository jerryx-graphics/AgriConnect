# Generated by Django 4.2.23 on 2025-10-27 16:28

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=200)),
                ("description", models.TextField()),
                (
                    "price_per_unit",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "unit",
                    models.CharField(
                        choices=[
                            ("kg", "Kilogram"),
                            ("g", "Gram"),
                            ("ton", "Ton"),
                            ("piece", "Piece"),
                            ("dozen", "Dozen"),
                            ("bag", "Bag"),
                            ("crate", "Crate"),
                            ("liter", "Liter"),
                            ("ml", "Milliliter"),
                        ],
                        default="kg",
                        max_length=20,
                    ),
                ),
                (
                    "quantity_available",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "minimum_order",
                    models.DecimalField(decimal_places=2, default=1, max_digits=10),
                ),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("fresh", "Fresh"),
                            ("good", "Good"),
                            ("fair", "Fair"),
                            ("dried", "Dried"),
                            ("processed", "Processed"),
                        ],
                        default="fresh",
                        max_length=20,
                    ),
                ),
                (
                    "quality_grade",
                    models.CharField(
                        choices=[
                            ("premium", "Premium"),
                            ("standard", "Standard"),
                            ("economic", "Economic"),
                        ],
                        default="standard",
                        max_length=20,
                    ),
                ),
                ("harvest_date", models.DateField(blank=True, null=True)),
                ("expiry_date", models.DateField(blank=True, null=True)),
                ("county", models.CharField(max_length=100)),
                ("sub_county", models.CharField(blank=True, max_length=100, null=True)),
                ("ward", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True, decimal_places=6, max_digits=9, null=True
                    ),
                ),
                ("is_organic", models.BooleanField(default=False)),
                (
                    "certifications",
                    models.JSONField(default=list, help_text="List of certifications"),
                ),
                ("is_available", models.BooleanField(default=True)),
                ("is_featured", models.BooleanField(default=False)),
                (
                    "tags",
                    models.JSONField(
                        default=list, help_text="Search tags for the product"
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("views_count", models.PositiveIntegerField(default=0)),
                ("inquiries_count", models.PositiveIntegerField(default=0)),
                ("orders_count", models.PositiveIntegerField(default=0)),
                (
                    "total_revenue",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("last_viewed", models.DateTimeField(blank=True, null=True)),
                ("last_ordered", models.DateTimeField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="ProductCategory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(blank=True, null=True, upload_to="categories/"),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "verbose_name_plural": "Product Categories",
            },
        ),
        migrations.CreateModel(
            name="ProductImage",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("image", models.ImageField(upload_to="products/")),
                ("is_primary", models.BooleanField(default=False)),
                ("caption", models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                "ordering": ["-is_primary", "created_at"],
            },
        ),
        migrations.CreateModel(
            name="ProductPriceHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "price_per_unit",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("date_changed", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "ordering": ["-date_changed"],
            },
        ),
        migrations.CreateModel(
            name="ProductReview",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "rating",
                    models.PositiveIntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("is_verified_purchase", models.BooleanField(default=False)),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Wishlist",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wishlist_items",
                        to="products.product",
                    ),
                ),
            ],
        ),
    ]
