# Generated by Django 4.2.23 on 2025-10-27 16:28

import core.utils
from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="EscrowAccount",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("active", "Active"),
                            ("held", "Held"),
                            ("released", "Released"),
                            ("refunded", "Refunded"),
                            ("disputed", "Disputed"),
                        ],
                        default="active",
                        max_length=20,
                    ),
                ),
                ("release_date", models.DateTimeField(blank=True, null=True)),
                ("auto_release_days", models.IntegerField(default=7)),
                ("dispute_reason", models.TextField(blank=True, null=True)),
                ("dispute_date", models.DateTimeField(blank=True, null=True)),
                ("resolution_notes", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "payments_escrow_account",
            },
        ),
        migrations.CreateModel(
            name="MpesaTransaction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("phone_number", models.CharField(max_length=15)),
                (
                    "mpesa_receipt_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "transaction_type",
                    models.CharField(
                        choices=[
                            ("paybill", "Pay Bill"),
                            ("till", "Buy Goods Till"),
                            ("c2b", "Customer to Business"),
                            ("b2c", "Business to Customer"),
                        ],
                        default="paybill",
                        max_length=20,
                    ),
                ),
                (
                    "checkout_request_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "merchant_request_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("result_code", models.CharField(blank=True, max_length=10, null=True)),
                ("result_desc", models.TextField(blank=True, null=True)),
                ("transaction_date", models.DateTimeField(blank=True, null=True)),
                (
                    "account_reference",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("transaction_desc", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "payments_mpesa_transaction",
            },
        ),
        migrations.CreateModel(
            name="Payment",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "payment_id",
                    models.CharField(
                        default=core.utils.generate_transaction_id,
                        max_length=20,
                        unique=True,
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                    ),
                ),
                ("currency", models.CharField(default="KES", max_length=3)),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("mpesa", "M-Pesa"),
                            ("bank", "Bank Transfer"),
                            ("cash", "Cash on Delivery"),
                        ],
                        default="mpesa",
                        max_length=20,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                            ("cancelled", "Cancelled"),
                            ("refunded", "Refunded"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "external_transaction_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("gateway_response", models.JSONField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("payment_date", models.DateTimeField(blank=True, null=True)),
                ("failure_reason", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "payments_payment",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentAnalytics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("date", models.DateField()),
                ("total_transactions", models.IntegerField(default=0)),
                ("successful_transactions", models.IntegerField(default=0)),
                ("failed_transactions", models.IntegerField(default=0)),
                (
                    "total_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "total_fees_collected",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("mpesa_transactions", models.IntegerField(default=0)),
                (
                    "mpesa_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                (
                    "amount_in_escrow",
                    models.DecimalField(decimal_places=2, default=0, max_digits=12),
                ),
                ("escrow_releases", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "payments_analytics",
            },
        ),
        migrations.CreateModel(
            name="PaymentWebhook",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "webhook_type",
                    models.CharField(
                        choices=[
                            ("mpesa_callback", "M-Pesa Callback"),
                            ("mpesa_result", "M-Pesa Result"),
                            ("bank_notification", "Bank Notification"),
                        ],
                        max_length=50,
                    ),
                ),
                ("raw_data", models.JSONField()),
                ("processed", models.BooleanField(default=False)),
                ("processing_error", models.TextField(blank=True, null=True)),
                ("source_ip", models.GenericIPAddressField(blank=True, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=500, null=True)),
                (
                    "payment",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="webhooks",
                        to="payments.payment",
                    ),
                ),
            ],
            options={
                "db_table": "payments_webhook",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentRefund",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("amount", models.DecimalField(decimal_places=2, max_digits=10)),
                ("reason", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("processing", "Processing"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                (
                    "refund_reference",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("processed_at", models.DateTimeField(blank=True, null=True)),
                (
                    "external_refund_id",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("gateway_response", models.JSONField(blank=True, null=True)),
                (
                    "payment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="refunds",
                        to="payments.payment",
                    ),
                ),
            ],
            options={
                "db_table": "payments_refund",
            },
        ),
    ]
