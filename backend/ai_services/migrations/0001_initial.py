# Generated by Django 4.2.23 on 2025-10-27 18:57

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("products", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="MarketInsight",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "insight_type",
                    models.CharField(
                        choices=[
                            ("price_trend", "Price Trend Analysis"),
                            ("supply_demand", "Supply & Demand Analysis"),
                            ("seasonal_pattern", "Seasonal Pattern"),
                            ("regional_comparison", "Regional Price Comparison"),
                            ("competition_analysis", "Competition Analysis"),
                            ("opportunity_alert", "Market Opportunity Alert"),
                        ],
                        max_length=20,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("description", models.TextField()),
                ("region", models.CharField(blank=True, max_length=100, null=True)),
                ("key_metrics", models.JSONField(default=dict)),
                ("trends", models.JSONField(default=dict)),
                ("recommendations", models.JSONField(default=list)),
                (
                    "target_roles",
                    models.JSONField(
                        default=list,
                        help_text="User roles this insight is relevant for",
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("medium", "Medium"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("valid_from", models.DateField(auto_now_add=True)),
                ("valid_until", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insights",
                        to="products.productcategory",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="insights",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "ordering": ["-priority", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DemandForecast",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "forecast_type",
                    models.CharField(
                        choices=[
                            ("product", "Product Level"),
                            ("category", "Category Level"),
                            ("regional", "Regional Level"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "region",
                    models.CharField(
                        blank=True,
                        help_text="County or specific region",
                        max_length=100,
                        null=True,
                    ),
                ),
                ("forecast_date", models.DateField(auto_now_add=True)),
                ("forecast_period_start", models.DateField()),
                ("forecast_period_end", models.DateField()),
                (
                    "predicted_demand_quantity",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                (
                    "predicted_demand_value",
                    models.DecimalField(decimal_places=2, max_digits=15),
                ),
                (
                    "historical_average",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "demand_change_percentage",
                    models.DecimalField(decimal_places=2, default=0, max_digits=5),
                ),
                (
                    "seasonal_factor",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                (
                    "weather_impact",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                (
                    "market_trend_factor",
                    models.DecimalField(decimal_places=2, default=1.0, max_digits=5),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                (
                    "peak_demand_day",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "demand_pattern",
                    models.JSONField(
                        default=dict, help_text="Daily/weekly demand pattern"
                    ),
                ),
                (
                    "factors",
                    models.JSONField(
                        default=list, help_text="Factors influencing the forecast"
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demand_forecasts",
                        to="products.productcategory",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="demand_forecasts",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "ordering": ["-forecast_date"],
            },
        ),
        migrations.CreateModel(
            name="AIModelMetrics",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "model_type",
                    models.CharField(
                        choices=[
                            ("price_prediction", "Price Prediction"),
                            ("demand_forecast", "Demand Forecasting"),
                            ("recommendation", "Product Recommendation"),
                            ("sentiment_analysis", "Sentiment Analysis"),
                            ("image_classification", "Product Image Classification"),
                        ],
                        max_length=20,
                    ),
                ),
                ("model_version", models.CharField(max_length=20)),
                (
                    "accuracy",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=5, null=True
                    ),
                ),
                (
                    "precision",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=5, null=True
                    ),
                ),
                (
                    "recall",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=5, null=True
                    ),
                ),
                (
                    "f1_score",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=5, null=True
                    ),
                ),
                (
                    "mae",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                (
                    "mse",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=10, null=True
                    ),
                ),
                ("training_date", models.DateTimeField()),
                ("training_data_size", models.PositiveIntegerField()),
                ("features_count", models.PositiveIntegerField()),
                ("parameters", models.JSONField(default=dict)),
                ("predictions_made", models.PositiveIntegerField(default=0)),
                (
                    "avg_response_time",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=8, null=True
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "ordering": ["-training_date"],
                "unique_together": {("model_type", "model_version")},
            },
        ),
        migrations.CreateModel(
            name="UserInteraction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "interaction_type",
                    models.CharField(
                        choices=[
                            ("view", "Product View"),
                            ("search", "Search Query"),
                            ("add_to_cart", "Add to Cart"),
                            ("purchase", "Purchase"),
                            ("review", "Product Review"),
                            ("wishlist", "Add to Wishlist"),
                            ("share", "Share Product"),
                            ("compare", "Product Comparison"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "search_query",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                ("session_id", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "duration",
                    models.PositiveIntegerField(
                        blank=True, help_text="Duration in seconds", null=True
                    ),
                ),
                ("referrer", models.CharField(blank=True, max_length=200, null=True)),
                ("user_agent", models.CharField(blank=True, max_length=500, null=True)),
                ("ip_address", models.GenericIPAddressField(blank=True, null=True)),
                ("device_type", models.CharField(blank=True, max_length=20, null=True)),
                ("metadata", models.JSONField(default=dict)),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions",
                        to="products.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["user", "interaction_type"],
                        name="ai_services_user_id_302461_idx",
                    ),
                    models.Index(
                        fields=["product", "interaction_type"],
                        name="ai_services_product_b2630f_idx",
                    ),
                    models.Index(
                        fields=["created_at"], name="ai_services_created_7b88b7_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ProductRecommendation",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "recommendation_type",
                    models.CharField(
                        choices=[
                            ("collaborative", "Collaborative Filtering"),
                            ("content_based", "Content-Based"),
                            ("hybrid", "Hybrid"),
                            ("trending", "Trending Products"),
                            ("seasonal", "Seasonal Recommendations"),
                            ("location_based", "Location-Based"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "score",
                    models.DecimalField(
                        decimal_places=4,
                        help_text="Recommendation score (0-1)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                ("reason", models.TextField(help_text="Reason for recommendation")),
                ("user_interaction_history", models.JSONField(default=dict)),
                (
                    "similar_users",
                    models.JSONField(default=list, help_text="IDs of similar users"),
                ),
                ("product_features", models.JSONField(default=dict)),
                ("is_viewed", models.BooleanField(default=False)),
                ("is_clicked", models.BooleanField(default=False)),
                ("is_purchased", models.BooleanField(default=False)),
                ("viewed_at", models.DateTimeField(blank=True, null=True)),
                ("clicked_at", models.DateTimeField(blank=True, null=True)),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to="products.product",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-score", "-created_at"],
                "unique_together": {("user", "product", "recommendation_type")},
            },
        ),
        migrations.CreateModel(
            name="PricePrediction",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "predicted_price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                ("current_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "price_change_percentage",
                    models.DecimalField(decimal_places=2, max_digits=5),
                ),
                (
                    "prediction_horizon",
                    models.CharField(
                        choices=[
                            ("1_day", "1 Day"),
                            ("3_days", "3 Days"),
                            ("1_week", "1 Week"),
                            ("2_weeks", "2 Weeks"),
                            ("1_month", "1 Month"),
                            ("3_months", "3 Months"),
                        ],
                        max_length=10,
                    ),
                ),
                (
                    "confidence_score",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="Confidence level as percentage (0-100)",
                        max_digits=5,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("prediction_date", models.DateField(auto_now_add=True)),
                (
                    "target_date",
                    models.DateField(help_text="Date for which the prediction is made"),
                ),
                ("model_version", models.CharField(default="1.0", max_length=20)),
                (
                    "features_used",
                    models.JSONField(
                        default=list, help_text="List of features used in prediction"
                    ),
                ),
                (
                    "market_conditions",
                    models.JSONField(
                        default=dict, help_text="Market conditions at prediction time"
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="price_predictions",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "ordering": ["-prediction_date"],
                "unique_together": {("product", "prediction_horizon", "target_date")},
            },
        ),
        migrations.CreateModel(
            name="PriceHistory",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("date", models.DateField(auto_now_add=True)),
                (
                    "market_location",
                    models.CharField(
                        help_text="Market or location where price was recorded",
                        max_length=100,
                    ),
                ),
                ("county", models.CharField(max_length=100)),
                (
                    "source",
                    models.CharField(
                        choices=[
                            ("manual", "Manual Entry"),
                            ("api", "API Feed"),
                            ("scraping", "Web Scraping"),
                            ("user_reported", "User Reported"),
                        ],
                        default="manual",
                        max_length=50,
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ai_price_history",
                        to="products.product",
                    ),
                ),
            ],
            options={
                "ordering": ["-date"],
                "unique_together": {("product", "date", "market_location")},
            },
        ),
    ]
