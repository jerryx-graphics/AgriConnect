# Generated by Django 4.2.23 on 2025-10-27 19:20

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("orders", "0002_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Delivery",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "delivery_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("pickup_location", models.CharField(max_length=200)),
                ("pickup_coordinates", models.JSONField(default=dict)),
                ("pickup_contact_name", models.CharField(max_length=100)),
                ("pickup_contact_phone", models.CharField(max_length=20)),
                ("pickup_instructions", models.TextField(blank=True, null=True)),
                ("delivery_location", models.CharField(max_length=200)),
                ("delivery_coordinates", models.JSONField(default=dict)),
                ("delivery_contact_name", models.CharField(max_length=100)),
                ("delivery_contact_phone", models.CharField(max_length=20)),
                ("delivery_instructions", models.TextField(blank=True, null=True)),
                ("scheduled_pickup_time", models.DateTimeField()),
                ("scheduled_delivery_time", models.DateTimeField()),
                ("actual_pickup_time", models.DateTimeField(blank=True, null=True)),
                ("actual_delivery_time", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("assigned", "Assigned"),
                            ("picked_up", "Picked Up"),
                            ("in_transit", "In Transit"),
                            ("out_for_delivery", "Out for Delivery"),
                            ("delivered", "Delivered"),
                            ("failed", "Failed Delivery"),
                            ("returned", "Returned"),
                            ("cancelled", "Cancelled"),
                        ],
                        default="assigned",
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low"),
                            ("normal", "Normal"),
                            ("high", "High"),
                            ("urgent", "Urgent"),
                        ],
                        default="normal",
                        max_length=10,
                    ),
                ),
                (
                    "total_weight_kg",
                    models.DecimalField(decimal_places=2, max_digits=8),
                ),
                (
                    "total_volume_m3",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("package_count", models.PositiveIntegerField(default=1)),
                (
                    "special_handling",
                    models.JSONField(
                        default=list, help_text="Special handling requirements"
                    ),
                ),
                ("delivery_cost", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "fuel_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "toll_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("is_paid", models.BooleanField(default=False)),
                (
                    "distance_traveled_km",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "fuel_consumption",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                ("delivery_notes", models.TextField(blank=True, null=True)),
                ("issues_encountered", models.JSONField(default=list)),
                (
                    "customer_rating",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ],
                    ),
                ),
                ("customer_feedback", models.TextField(blank=True, null=True)),
                (
                    "order",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery",
                        to="orders.order",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Deliveries",
                "ordering": ["-scheduled_delivery_time"],
            },
        ),
        migrations.CreateModel(
            name="DeliveryRoute",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "route_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                ("name", models.CharField(max_length=100)),
                ("start_location", models.CharField(max_length=200)),
                ("start_coordinates", models.JSONField(default=dict)),
                ("end_location", models.CharField(max_length=200)),
                ("end_coordinates", models.JSONField(default=dict)),
                (
                    "waypoints",
                    models.JSONField(
                        default=list, help_text="Intermediate stops with coordinates"
                    ),
                ),
                (
                    "total_distance_km",
                    models.DecimalField(decimal_places=2, max_digits=8),
                ),
                ("estimated_duration_minutes", models.PositiveIntegerField()),
                (
                    "optimization_algorithm",
                    models.CharField(default="dijkstra", max_length=50),
                ),
                (
                    "optimization_factors",
                    models.JSONField(
                        default=dict, help_text="Factors considered in optimization"
                    ),
                ),
                ("traffic_data_used", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("times_used", models.PositiveIntegerField(default=0)),
                ("last_used", models.DateTimeField(blank=True, null=True)),
                (
                    "transporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery_routes",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DeliveryZone",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "boundary_coordinates",
                    models.JSONField(
                        help_text="Polygon coordinates defining the zone boundary"
                    ),
                ),
                (
                    "center_coordinates",
                    models.JSONField(
                        default=dict, help_text="Center point of the zone"
                    ),
                ),
                (
                    "coverage_area_km2",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "population_estimate",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "service_days",
                    models.JSONField(
                        default=list,
                        help_text="Days of the week when service is available",
                    ),
                ),
                (
                    "service_hours",
                    models.JSONField(
                        default=dict, help_text="Service hours for each day"
                    ),
                ),
                (
                    "base_delivery_cost",
                    models.DecimalField(decimal_places=2, max_digits=8),
                ),
                ("cost_per_km", models.DecimalField(decimal_places=2, max_digits=5)),
                (
                    "minimum_order_value",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "average_delivery_time_minutes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("total_deliveries", models.PositiveIntegerField(default=0)),
                ("successful_deliveries", models.PositiveIntegerField(default=0)),
            ],
            options={
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Vehicle",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "vehicle_type",
                    models.CharField(
                        choices=[
                            ("motorcycle", "Motorcycle"),
                            ("pickup", "Pickup Truck"),
                            ("van", "Van"),
                            ("truck", "Truck"),
                            ("trailer", "Trailer"),
                            ("bicycle", "Bicycle"),
                        ],
                        max_length=20,
                    ),
                ),
                ("make", models.CharField(max_length=50)),
                ("model", models.CharField(max_length=50)),
                ("year", models.PositiveIntegerField()),
                ("license_plate", models.CharField(max_length=20, unique=True)),
                (
                    "max_weight_capacity",
                    models.DecimalField(
                        decimal_places=2, help_text="Maximum weight in kg", max_digits=8
                    ),
                ),
                (
                    "max_volume_capacity",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Maximum volume in cubic meters",
                        max_digits=8,
                        null=True,
                    ),
                ),
                (
                    "fuel_type",
                    models.CharField(
                        choices=[
                            ("petrol", "Petrol"),
                            ("diesel", "Diesel"),
                            ("electric", "Electric"),
                            ("hybrid", "Hybrid"),
                            ("manual", "Manual (Bicycle)"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "fuel_consumption",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        help_text="Fuel consumption per 100km",
                        max_digits=5,
                        null=True,
                    ),
                ),
                ("color", models.CharField(blank=True, max_length=30, null=True)),
                ("insurance_expiry", models.DateField(blank=True, null=True)),
                ("registration_expiry", models.DateField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_available", models.BooleanField(default=True)),
                (
                    "current_location",
                    models.CharField(blank=True, max_length=200, null=True),
                ),
                (
                    "current_coordinates",
                    models.JSONField(
                        default=dict, help_text="Current latitude and longitude"
                    ),
                ),
                (
                    "total_distance_km",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=10
                    ),
                ),
                ("total_deliveries", models.PositiveIntegerField(default=0)),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=3
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vehicles",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="TransportCompany",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("name", models.CharField(max_length=100, unique=True)),
                ("registration_number", models.CharField(max_length=50, unique=True)),
                ("phone", models.CharField(max_length=20)),
                ("email", models.EmailField(max_length=254)),
                ("address", models.TextField()),
                (
                    "operating_area",
                    models.JSONField(
                        default=list, help_text="List of areas/counties they operate in"
                    ),
                ),
                (
                    "license_number",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("insurance_details", models.JSONField(default=dict)),
                ("is_verified", models.BooleanField(default=False)),
                ("verification_date", models.DateTimeField(blank=True, null=True)),
                ("total_deliveries", models.PositiveIntegerField(default=0)),
                ("successful_deliveries", models.PositiveIntegerField(default=0)),
                (
                    "average_rating",
                    models.DecimalField(
                        decimal_places=2, default=Decimal("0"), max_digits=3
                    ),
                ),
                ("average_delivery_time", models.DurationField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_accepting_orders", models.BooleanField(default=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="transport_companies",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Transport Companies",
            },
        ),
        migrations.CreateModel(
            name="RouteOptimization",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "optimization_id",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "optimization_type",
                    models.CharField(
                        choices=[
                            ("distance", "Minimize Distance"),
                            ("time", "Minimize Time"),
                            ("cost", "Minimize Cost"),
                            ("fuel", "Minimize Fuel Consumption"),
                            ("balanced", "Balanced Optimization"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "algorithm",
                    models.CharField(
                        choices=[
                            ("dijkstra", "Dijkstra Algorithm"),
                            ("a_star", "A* Algorithm"),
                            ("genetic", "Genetic Algorithm"),
                            ("simulated_annealing", "Simulated Annealing"),
                            ("greedy", "Greedy Algorithm"),
                        ],
                        max_length=30,
                    ),
                ),
                (
                    "start_location",
                    models.JSONField(help_text="Starting point coordinates"),
                ),
                ("end_location", models.JSONField(help_text="End point coordinates")),
                (
                    "waypoints",
                    models.JSONField(default=list, help_text="Required waypoints"),
                ),
                (
                    "delivery_windows",
                    models.JSONField(
                        default=dict, help_text="Time windows for each delivery"
                    ),
                ),
                (
                    "max_distance_km",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "max_duration_minutes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                ("avoid_toll_roads", models.BooleanField(default=False)),
                ("avoid_highways", models.BooleanField(default=False)),
                (
                    "optimized_route",
                    models.JSONField(
                        default=dict, help_text="Optimized route with coordinates"
                    ),
                ),
                (
                    "total_distance_km",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "total_duration_minutes",
                    models.PositiveIntegerField(blank=True, null=True),
                ),
                (
                    "estimated_fuel_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "estimated_toll_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=8, null=True
                    ),
                ),
                (
                    "processing_time_seconds",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=8, null=True
                    ),
                ),
                ("is_processed", models.BooleanField(default=False)),
                ("processing_error", models.TextField(blank=True, null=True)),
                ("is_used", models.BooleanField(default=False)),
                (
                    "created_route",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="logistics.deliveryroute",
                    ),
                ),
                (
                    "transporter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="route_optimizations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "vehicle",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="optimizations",
                        to="logistics.vehicle",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="DeliveryTracking",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("location", models.CharField(max_length=200)),
                (
                    "coordinates",
                    models.JSONField(
                        default=dict, help_text="Current latitude and longitude"
                    ),
                ),
                ("status_update", models.CharField(max_length=100)),
                ("notes", models.TextField(blank=True, null=True)),
                ("estimated_arrival", models.DateTimeField(blank=True, null=True)),
                (
                    "temperature",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "humidity",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "speed_kmh",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5, null=True
                    ),
                ),
                (
                    "fuel_level_percentage",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("is_automated", models.BooleanField(default=True)),
                (
                    "delivery",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tracking_updates",
                        to="logistics.delivery",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "ordering": ["-timestamp"],
            },
        ),
        migrations.AddField(
            model_name="deliveryroute",
            name="vehicle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="routes",
                to="logistics.vehicle",
            ),
        ),
        migrations.CreateModel(
            name="DeliveryFeedback",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("is_deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(blank=True, null=True)),
                (
                    "overall_rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                (
                    "timeliness_rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                (
                    "condition_rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                (
                    "service_rating",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(1),
                            django.core.validators.MaxValueValidator(5),
                        ]
                    ),
                ),
                ("comments", models.TextField(blank=True, null=True)),
                ("improvement_suggestions", models.TextField(blank=True, null=True)),
                (
                    "issues_reported",
                    models.JSONField(
                        default=list, help_text="List of issues encountered"
                    ),
                ),
                ("damage_reported", models.BooleanField(default=False)),
                ("damage_description", models.TextField(blank=True, null=True)),
                ("requires_follow_up", models.BooleanField(default=False)),
                ("follow_up_notes", models.TextField(blank=True, null=True)),
                ("is_resolved", models.BooleanField(default=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="delivery_feedback",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "delivery",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="feedback",
                        to="logistics.delivery",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.AddField(
            model_name="delivery",
            name="route",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="logistics.deliveryroute",
            ),
        ),
        migrations.AddField(
            model_name="delivery",
            name="transporter",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deliveries",
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.AddField(
            model_name="delivery",
            name="vehicle",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="deliveries",
                to="logistics.vehicle",
            ),
        ),
    ]
